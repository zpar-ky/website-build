<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on I&#39;m Andrew!</title>
    <link>https://zpar.ky/posts/</link>
    <description>Recent content in Posts on I&#39;m Andrew!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Jul 2018 12:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zpar.ky/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How I Automate My Media Needs</title>
      <link>https://zpar.ky/posts/how_i_automate_my_media_needs/</link>
      <pubDate>Thu, 27 Jun 2019 12:49:22 -0500</pubDate>
      
      <guid>https://zpar.ky/posts/how_i_automate_my_media_needs/</guid>
      <description>When I started archiving twitch streams, my data usage went up dramatically. As I had to both download and upload each stream, I was easily pushing 60 gigabytes a day. And that was just streaming. But that&amp;rsquo;s actually going to be another post, as my setup has gotten significantly more complex now that I&amp;rsquo;ve moved to a VPS.
Anyway, I was essentially using almost two terabytes of data a month, split among stream archiving, general usage, and media ingesting.</description>
    </item>
    
    <item>
      <title>How to Automatically Archive Twitch Streams - The Hard Way</title>
      <link>https://zpar.ky/posts/how_to_automatically_archive_twitch_streams/</link>
      <pubDate>Fri, 20 Jul 2018 12:15:50 -0400</pubDate>
      
      <guid>https://zpar.ky/posts/how_to_automatically_archive_twitch_streams/</guid>
      <description>If you&amp;rsquo;re like me, simply downloading Twitch VODs aren&amp;rsquo;t good enough. The major one for me is that VODs will have copyrighted content muted, so if the stream has a copyrighted song playing, an entire 5+ minute chunk of the video will be muted. You can get around this by streaming the stream to a local file with streamlink.
Pretty simple, until you want it to not be. Let&amp;rsquo;s make it difficult, with powershell scripting, timed scripts, and error handling!</description>
    </item>
    
  </channel>
</rss>